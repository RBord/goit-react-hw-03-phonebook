{"version":3,"sources":["Components/Filter/Filter.module.css","Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","Components/App/App.jsx","index.js","Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","evt","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","form","htmlFor","label","text","type","pattern","title","onChange","id","required","btn","React","Component","ContactList","onDeleteContact","console","log","map","divItem","liItem","onClick","Filter","input","App","contacts","filter","onSameName","find","el","addContact","data","contact","prevState","alert","deleteContact","contactId","changeFilter","getFiltredContacts","normalizedFilter","toLowerCase","includes","prevProps","localStorage","setItem","JSON","stringify","getItem","parsedContacts","parse","filtredNames","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84672626.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__iDudF\"};","import React from 'react';\nimport shortid from 'shortid';\nimport s from '../ContactForm/ContactForm.module.css'\n\nclass ContactForm extends React.Component {\n    state = {\n        name: '',\n        number: '',\n    }\n    nameInputId = shortid.generate();\n    numberInputId = shortid.generate();\n\n    handleChange = evt => {\n        const { name, value } = evt.currentTarget;\n        this.setState({\n            [name]:value,\n        })\n    }\n    handleSubmit = evt => {\n        evt.preventDefault();\n\n        this.props.onSubmit(this.state);\n        this.reset();\n    }\n    reset = () => {\n        this.setState({ name: '', number: '' });\n    }\n\n    \n    render() {\n        return (\n            <form onSubmit={this.handleSubmit} className={s.form}>\n                <label htmlFor={this.nameInputId} className={s.label}><p className={s.text}>Name</p>\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        value={this.state.name}\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                        onChange={this.handleChange}\n                        id={this.nameInputId}\n                        required\n                    />\n                </label>\n                <label htmlFor={this.numberInputId} className={s.label}><p className={s.text}>Number</p>\n                    <input\n                        type=\"tel\"\n                        name=\"number\"\n                        value={this.state.number}\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                        onChange={this.handleChange}\n                        id={this.numberInputId}\n                        required\n                        \n                    />\n                </label>\n                <button type='submit' className={s.btn}>Add contact</button>\n            </form>\n        );\n    }\n}\nexport default ContactForm;","import React from 'react';\nimport s from '../ContactList/ContactList.module.css';\n\nconst ContactList = ({value, onDeleteContact}) => {\n    console.log(value)\n    return (\n        <ul value={value}>\n            {value.map(({ id, name, number}) => {\n                return (\n                    <div key={id} className={s.divItem}>\n                        <li className={s.liItem}>{name}: {number}</li> <button onClick={()=>onDeleteContact(id)} className={s.btn}>Delete</button>\n                    </div>\n                )\n            })}\n        </ul>\n    )\n}\nexport default ContactList;","import React from 'react';\nimport shortid from 'shortid';\nimport s from '../Filter/Filter.module.css';\n\nconst nameInputId = shortid.generate();\n\nconst Filter = ({value, onChange }) => (\n    <label htmlFor={nameInputId}>\n        Find contacts by Name\n        <input type=\"text\" value={value} onChange={onChange} id={nameInputId} className={s.input}/>\n    </label>\n)\n\nexport default Filter;","import React from 'react';\nimport shortid from 'shortid';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\n\nclass App extends React.Component {\n    state = {\n        contacts: [\n            {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n            {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n            {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n            {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n        ],\n        filter: '',\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n        if (this.state.contacts !== prevState.contacts) {\n            localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n        }\n    }\n    componentDidMount() {\n        const contacts = localStorage.getItem('contacts');\n        const parsedContacts = JSON.parse(contacts);\n        if (parsedContacts) {\n            this.setState({ contacts: parsedContacts });\n        }\n    }\n    onSameName = (name, contacts) => {\n        const hasName = contacts.find(el => el.name === name);\n        return(hasName ? false : true)\n    }\n    addContact = data => {\n        const contact = {\n            id: shortid.generate(),\n            name: data.name,\n            number: data.number,\n        }\n\n        this.setState(prevState => {\n            const isUnique = this.onSameName(contact.name, prevState.contacts);\n            if (isUnique) {\n                return {\n                    contacts: [contact, ...prevState.contacts]\n                };\n            } else {\n                alert('Контакт с таким Именем уже добавлен!')\n            }\n        })\n    }\n    deleteContact = contactId => {\n        this.setState(prevState => ({\n            contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n        }))\n    }\n    changeFilter = evt => {\n        this.setState({filter: evt.currentTarget.value})\n    }\n    getFiltredContacts = () => {\n        const { filter, contacts } = this.state;\n        const normalizedFilter = filter.toLowerCase();\n\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(normalizedFilter));\n    }\n\n    render() {\n        const { filter} = this.state;\n        const filtredNames = this.getFiltredContacts();\n        \n        return (    \n            <>\n                <h1>Phonebook</h1>\n                <ContactForm onSubmit={this.addContact}/>\n                <h2>Contacts</h2>\n                <Filter value={filter} onChange={this.changeFilter} />\n                <ContactList value={filtredNames} onDeleteContact={this.deleteContact}/>\n            </>\n        )\n    }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App/App'\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__32OK-\",\"btn\":\"ContactForm_btn__-NRUX\",\"label\":\"ContactForm_label__2uhBs\",\"text\":\"ContactForm_text__1vm23\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"divItem\":\"ContactList_divItem__NgbjX\",\"liItem\":\"ContactList_liItem__eMZkO\",\"btn\":\"ContactList_btn__3FiWR\"};"],"sourceRoot":""}